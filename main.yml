---
- name: Play to setup postgres server
  hosts: database_servers
  become: true
  become_method: sudo
  gather_facts: false
  tags:
    - database_servers
  roles:
    - role: postgres
      vars:
        postgres_rhel8_repo: "https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
        postgres_packages:
          - postgresql12 
          - postgresql12-server
          - postgresql12-contrib 
          - postgresql12-libs
        postgres_library: python3-psycopg2
        postgres_12_data_dir: /var/lib/pgsql/12/data
        postgres_12_bin_path: /usr/pgsql-12/bin
        postgres_service: postgresql-12.service
        postgres_port: 5432
        postgres_user: postgres
        postgres_users:
        - name: flask
          password: redhat
          database: flask_db
          state: present
          priv: ALL
        postgres_databases:
        - name: flask_db
          owner: flask
        - name: books_store
          owner: flask
          
- name: Deploy, configure, and populate flask repo and virtualenv
  hosts: app_servers
  become: true
  gather_facts: false
  tags:
    - application_servers
    - flask
  roles:
    - role: flask
      vars:
        flask_app_name: resource_hub
        flask_user: flask
        flask_home: /opt/
        flask_repo: https://github.com/tonykay/resource_hub.git  
        flask_scm_ref: main  
        flask_app_lauch_script: /usr/local/bin/launch_resource_hub   
        virtualenv_name: "venv-{{ flask_app_name }}"  
        virtualenv_home: /opt/virtual_envs
        virtualenv_python: /usr/bin/python3
      
        app_yum_packages:
         - autoconf
         - automake
         - git
         - gcc
         - libtool
         - python3
         - python3-psycopg2

        pip_dependencies:
         - virtualenv
         - psycopg2-binary==2.8.6

- name: Deploy haproxy load balancer
  hosts: load_balancers
  gather_facts: false 
  become: true

  vars:
    load_balancer_packages:
      - haproxy

  tags:
    - load_balancers

  tasks:

    - name: Install load balancer packages
      package:
        name: "{{ load_balancer_packages }}"
        state: present

    - name: Configure haproxy load balancing
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      notify: restart_haproxy

    - name: Enable Haproxy
      service:
        name: haproxy
        state: started
        enabled: true

  handlers:

    - name: restart_haproxy
      service:
        name: haproxy
        state: restarted

- name: End to end smoke tests
  hosts: app_servers:database_servers
  gather_facts: true
  become: true
  tags:
    - smoketest  

  tasks:

    - name: Smoketest Postgres database
      postgresql_ping:
        db: flask_db
        login_host: "{{ groups.database_servers[0] }}"
        login_user: flask
        login_password: redhat
        ssl_mode: disable
      delegate_to: "{{ groups.app_servers[0] }}"
      run_once: true
      tags:
        - smoketest

- name: End to end smoke tests
  hosts: app_servers
  become: false
  gather_facts: false
  tags:
    - smoketest  
  tasks:
 
    - name: Check webserver for correct response
      uri:
        url: "http://frontend1.example.com/ping"
        return_content: yes
      until: '"alive" in result.content'
      retries: 10
      delay: 1
      register: result
      delegate_to: localhost
